if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
direction <- 1
pal <- tate_palettes[[name]]
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
get_pal <- function(name, direction, n) {
pal <- tate_palettes[[name]]
if (is.null(n)) {
n <- length(pal$palette)
}
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = get_pal(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
get_pal <- function(name, direction, n = n) {
pal <- tate_palettes[[name]]
if (is.null(n)) {
n <- length(pal$palette)
}
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = get_pal(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
get_pal <- function(name, direction, n = NULL) {
pal <- tate_palettes[[name]]
if (is.null(n)) {
n <- length(pal$palette)
}
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = get_pal(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
get_pal <- function(name, direction, n = 3) {
pal <- tate_palettes[[name]]
if (is.null(n)) {
n <- length(pal$palette)
}
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = get_pal(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
name <- "Turner"
pal <- tate_palettes[[name]]
pal
pal$palette[[1]]
pal$palette
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (direction %notin% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name="tate_d",
palette = tate_discrete(name = name, direction = direction))
}
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (direction %notin% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name="tate_d",
palette = as.vector(tate_discrete(name = name, direction = direction)))
}
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (direction %notin% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name="tate_d",
palette = tate_discrete(name = name, direction = direction))
}
tate_discrete(name = "Turner", direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name="tate_d",
palette = tate_discrete(name = name, direction = direction))
}
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
discrete_scale(aesthetics = "colour", scale_name="tate_d",
palette = tate_discrete(name = name, direction = direction))
}
tate_discrete(name = "Turner", direction = 1)
pal <- tate_palettes[[name]]
name <- " Turner"
name <- "Turner"
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
direction <- 1
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
}
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
pal
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = tate_discrete(name = name, direction = direction))
}
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
scale_colour_tate_d <- function(name, n = NULL, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
pal
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = tate_discrete(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", n = NULL, direction = 1)
?tate_palette
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Hockney", n = NULL, direction = 1)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Hockney", n = 1, direction = 1)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Hockney", n = 2, direction = 1)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Hockney", direction = 1)
scale_colour_tate_d <- function(name, direction = 1, ...) {
tate_discrete <- function(name, direction = 1) {
pal <- tate_palettes[[name]]
if (is.null(palette)){
stop("Palette does not exist.")
}
if (!direction %in% c(1, -1)){
stop("Direction not valid. Please use 1 for standard palette or -1 for reversed palette.")
}
function(n) {
if (direction == 1) {
pal <- pal$palette[
round(seq(from = 1, to = length(pal$palette), length.out = n))]
} else {
pal <- pal$palette[
round(seq(from = length(pal$palette), to = 1, length.out = n))]
}
pal
}
}
discrete_scale(aesthetics = "colour", scale_name = "tate_d",
palette = tate_discrete(name = name, direction = direction))
}
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Hockney", direction = 1)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, colour=Species)) +
geom_point() +
scale_colour_tate_d(name = "Sargent", direction = 1)
?scale_colour_met_d
ggplot::scale_colour_gradientn
load_all()
document()
document()
load_all()
?scale_colour_tate_d
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_tate_s("Turner", direction = 1)
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_tate_d("Turner", direction = 1)
load_all()
document()
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_tate_d(name = "Turner", direction = 1)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_met_d(name = "Turner", direction = 1)
library(MetBrewer)
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_met_d(name = "Turner", direction = 1)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Sepal.Length)) +
geom_point() +
scale_colour_met_d(name = "Cross", direction = 1)
document()
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Speceis)) +
geom_point() +
scale_colour_tate_d(name = "Turner", direction = 1)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +
geom_point() +
scale_colour_tate_d(name = "Turner", direction = 1)
document()
?scale_colour_tate_d
document()
?scale_gradient_tate_d
?scale_colour_tate_d
library(tate)
?scale_colour_tate_d
?iris
?datasets
library(help = "datasets")
beavers
data("beaves")
data("beavers")
beavers
beaver
data("lynx")
lynx
View(beaver1)
View(beaver2)
library(help = "datasets")
data("faithful")
faithful
data("co2")
co2
data("rock")
rock
data("quakes")
quakes
data("islands")
islands
data("mtcars")
mtcars
library(palmerpenguins)
library(palmerpenguins)
data("palmerpenguins")
palmerpenguins::penguins
document()
scale_colour_tate_d
?scale_colour_tate_d
library(ggplot2)
library(penguins)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
scale_colour_tate_d("Turner", direction = 1)
document()
?scale_colour_tate_d
library(ggplot2)
library(penguins)
ggplot(data = iris,
aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
scale_colour_tate_d("Turner", direction = 1)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
scale_colour_tate_d("Turner", direction = 1)
library(ggplot2)
library(palmerpenguins)
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
scale_colour_tate_d("Waterhouse", direction = 1)
document()
?scale_colour_tate_d
document()
document()
document()
?scale_fill_tate_d
# Load libraries
library(ggplot2)
library(palmerpenguins)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, fill = species)) +
geom_point() +
scale_fill_tate_d("Waterhouse", direction = 1)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, fill = species)) +
geom_point(colour = "black", pch = 21) +
scale_fill_tate_d("Waterhouse", direction = 1)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, fill = species)) +
geom_point(colour = "black", pch = 21) +
scale_fill_tate_d("Waterhouse", direction = 1)
load_all()
# Load libraries
library(ggplot2)
library(palmerpenguins)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, fill = species)) +
geom_point(colour = "black", pch = 21) +
scale_fill_tate_d("Waterhouse", direction = 1)
document()
?Scale_fill_tate_d
# Load libraries
library(ggplot2)
library(palmerpenguins)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, fill = species)) +
geom_point(colour = "black", pch = 21) +
scale_fill_tate_d("Waterhouse", direction = 1)
document()
?scale_fill_tate_d
?scale_color_tate_d
?scale_colour_tate_d
document()
document()
?scale_colour_tate_d
# Load libraries
library(ggplot2)
library(palmerpenguins)
# Plot data
ggplot(data = penguins,
aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
scale_colour_tate_d("Millais", direction = 1)
